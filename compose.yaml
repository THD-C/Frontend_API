services:
  Backend:
    build:
      dockerfile: Dockerfile
    image: thd/frontend_api
    container_name: THD_Frontend_API
    hostname: THD_Frontend_API
    restart: unless-stopped
    environment:
      - DB_MANAGER_PORT=50051
      - DB_MANAGER=THD_DB_Manager
      - MONGO_MANAGER_PORT=50051
      - MONGO_MANAGER=THD_Mongo_Manager
      - PRICE_MANAGER=THD_Price_Manager
      - PRICE_MANAGER_PORT=50051
      - ORDERS_SERVICE=THD_Orders_Service
      - ORDERS_SERVICE_PORT=50051
    ports:
      - 8000:8000
    healthcheck:
      test: curl --fail http://THD_Frontend_API:8000/api/healthcheck
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      DBManager:
        condition: service_started
      Mongo_Manager:
        condition: service_started

  Price-Manager:
    build: https://github.com/THD-C/CoinGecko_API.git
    image: thd/price_manager
    container_name: THD_Price_Manager
    hostname: THD_Price_Manager
    restart: unless-stopped
    ports:
      - 50053:50051
    environment:
      - MONGO_MANAGER_PORT=50051
      - MONGO_MANAGER=THD_Mongo_Manager
    depends_on:
      Mongo_Manager:
        condition: service_started

  Orders-Service:
    build: https://github.com/THD-C/Order_Service.git
    image: thd/orders_service
    container_name: THD_Orders_Service
    hostname: THD_Orders_Service
    restart: unless-stopped
    ports:
      - 50054:50051
    environment:
      - DB_MANAGER_ADDRESS=THD_DB_Manager:50051
      - COINGECKO_SERVICE_ADDRESS=THD_Price_Manager:50051
    depends_on:
      Mongo_Manager:
        condition: service_started
      DBManager:
        condition: service_started

  Postgres:
    build: https://github.com/THD-C/Postgres.git
    image: thd/postgres
    container_name: THD_Postgres
    hostname: Postgres
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - PG-Data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U default -d thdc" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  DBManager:
    build: https://github.com/THD-C/DB_Manager.git
    image: thd/dbmanager
    container_name: THD_DB_Manager
    hostname: THD_DB_Manager
    restart: unless-stopped
    ports:
      - 50051:50051
    environment:
      - POSTGRES_URL=postgresql://default:PL_tech_hand_elk@Postgres:5432/thdc
      - DROP_EXISTING_DB=False
    depends_on:
      Postgres:
        condition: service_healthy

  Mongo:
    build:
      context: https://github.com/THD-C/Mongo.git
      secrets:
        - github_token
    image: thd/mongo
    container_name: THD_Mongo
    hostname: Mongo
    restart: unless-stopped
    depends_on:
      DBManager:
        condition: service_started
    ports:
      - 27017:27017
    volumes:
      - MO-Data:/data/db

  Mongo_Manager:
    build: https://github.com/THD-C/Mongo_Manager.git
    image: thd/mongo_manager
    container_name: THD_Mongo_Manager
    hostname: THD_Mongo_Manager
    restart: unless-stopped
    environment:
      - MONGO_URL=mongodb://Mongo/THDC
    ports:
      - 50052:50051
    depends_on:
      Mongo:
        condition: service_started

  memcached:
    profiles:
      - Telemetry
    container_name: MemCached_Tempo
    restart: unless-stopped
    image: memcached:1.6.29
    ports:
      - "11211:11211"
    environment:
      - MEMCACHED_MAX_MEMORY=64m  # Set the maximum memory usage
      - MEMCACHED_THREADS=4       # Number of threads to use

  tempo:
    profiles:
      - Telemetry
    container_name: Tempo
    hostname: Tempo
    restart: unless-stopped
    image: grafana/tempo:main-a46ac6d
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./config/tempo.yaml:/etc/tempo.yaml
      - Tempo_Data:/var/tempo
    ports:
      - 14268:14268  # jaeger ingest
      - 3200:3200   # tempo
      - 9095:9095 # tempo grpc
      - 4317:4317  # otlp grpc
      - 4318:4318  # otlp http
      - 9411:9411   # zipkin
    depends_on:
      - memcached

  prometheus:
    profiles:
      - Telemetry
    container_name: Prometheus
    hostname: Prometheus
    restart: unless-stopped
    image: prom/prometheus:v2.54.1
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=14d
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus.yaml
      - Prometheus_Data:/prometheus
    ports:
      - 9999:9090

secrets:
  github_token:
    file: ./.github_token
volumes:
  PG-Data:
  MO-Data:
  Tempo_Data:
  Prometheus_Data: